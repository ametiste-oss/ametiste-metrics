
subprojects {

    apply plugin: 'maven'
    apply plugin: 'java'

    apply from: "https://raw.githubusercontent.com/ametiste-oss/ametiste-bintray-gradle/master/bintray-ext-ame-oss.gradle"
    apply from: "https://raw.githubusercontent.com/ametiste-oss/ametiste-bintray-gradle/master/bintray-ext.gradle"

    apply plugin: 'maven-publish'

    group 'org.ametiste.metrics'

    version '0.1.0-2-RC'

    sourceCompatibility=1.8
    targetCompatibility=1.8


    ext {
        springVersion = '4.2.0.RELEASE'
        junitVersion = '4.11'
        mockitoVersion = '1.9.5'
        sl4jVersion = '1.7.2'

        bintray_vcsUrl = 'https://github.com/ametiste-oss/ametiste-metrics.git'
    }


    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile "junit:junit:${junitVersion}"
        testCompile "org.mockito:mockito-all:${mockitoVersion}"
        compile "org.slf4j:slf4j-api:${sl4jVersion}"
    }

    configurations {
        deployerJars
    }

    configurations.all {
        // check for updates every build
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    javadoc {
        options {
            encoding = 'UTF-8'
        }
    }

    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'


    task sourcesJar(type: Jar, dependsOn:classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn:javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    test.outputs.upToDateWhen {false}
    test.testLogging.showStandardStreams = true

    test {
        afterTest { desc, result ->
            println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
        }
    }

}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}

configure(rootProject) {

    description = 'Metrics library'


}
